{"version":3,"sources":["api/api.ts","components/TodoList/TodoList.tsx","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["request","endPoint","fetch","then","response","ok","Error","status","statusText","json","TodoList","todos","selectedUserId","onSelect","useState","visibleTodos","setVisibleTodos","query","setQuery","selectedStatus","setSelectedStatus","useEffect","filter","todo","filteredTodo","title","includes","completed","className","action","type","placeholder","value","onChange","event","target","disabled","onClick","sort","Math","random","map","readOnly","checked","userId","id","CurrentUser","onClear","currentUser","setCurrentUser","loadUser","a","name","phone","email","App","setSelectedUserId","setTodos","loadTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.29f5b8ea.chunk.js","sourcesContent":["const todosURL = 'https://mate.academy/students-api/todos';\nconst userURL = 'https://mate.academy/students-api/users/';\n\nconst request = (endPoint: string) => {\n  return fetch(endPoint)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n};\n\nexport const getTodos = () => {\n  return request(todosURL);\n};\n\nexport const getUser = (userId: number) => {\n  return request(`${userURL}${userId}`);\n};\n","import React, { useState, useEffect } from 'react';\nimport './TodoList.scss';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedUserId: number,\n  onSelect: CallableFunction,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedUserId,\n  onSelect,\n}) => {\n  const [visibleTodos, setVisibleTodos] = useState(todos);\n  const [query, setQuery] = useState('');\n  const [selectedStatus, setSelectedStatus] = useState('default');\n\n  useEffect(() => {\n    setVisibleTodos(todos.filter(todo => {\n      const filteredTodo = todo.title.includes(query);\n\n      switch (selectedStatus) {\n        case 'all':\n        default:\n          return filteredTodo;\n\n        case 'active':\n          return filteredTodo && !todo.completed;\n\n        case 'completed':\n          return filteredTodo && todo.completed;\n      }\n    }));\n  }, [query, selectedStatus, todos]);\n\n  const randomizer = () => {\n    return setVisibleTodos(\n      [...visibleTodos].sort(() => Math.random() - 0.5),\n    );\n  };\n\n  return (\n    <div className=\"TodoList\">\n      <h2>Todos:</h2>\n\n      <div className=\"TodoList__list-container\">\n        <form\n          action=\"submit\"\n          className=\"form\"\n        >\n          <input\n            type=\"text\"\n            className=\"form__input\"\n            placeholder=\"Search by todo title\"\n            data-cy=\"filterByTitle\"\n            value={query}\n            onChange={(event) => {\n              setQuery(event.target.value);\n            }}\n          />\n\n          <select\n            className=\"form__select\"\n            value={selectedStatus}\n            onChange={(event) => {\n              setSelectedStatus(event.target.value);\n            }}\n          >\n            <option value=\"default\" disabled>Choose todo status</option>\n            <option value=\"all\">All todos</option>\n            <option value=\"active\">Active todos</option>\n            <option value=\"completed\">Completed todos</option>\n          </select>\n\n          <button\n            type=\"button\"\n            className=\"form__button\"\n            onClick={() => randomizer()}\n          >\n            Randomize list\n          </button>\n        </form>\n        <ul\n          className=\"TodoList__list\"\n          data-cy=\"listOfTodos\"\n        >\n          {visibleTodos.map(todo => (\n            <li\n              key={todo.id}\n              className={`\n                TodoList__item\n                TodoList__item--${todo.completed ? 'checked' : 'unchecked'}\n              `}\n            >\n              <label>\n                <input\n                  type=\"checkbox\"\n                  readOnly\n                  checked={todo.completed}\n                />\n                <p>{todo.title}</p>\n              </label>\n\n              <button\n                data-cy=\"userButton\"\n                className={`\n                  TodoList__user-button\n                  ${todo.userId === selectedUserId ? 'TodoList__user-button--selected' : ''}\n                  button\n                `}\n                type=\"button\"\n                onClick={() => onSelect(todo.userId)}\n              >\n                User&nbsp;#\n                {todo.userId}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { getUser } from '../../api/api';\nimport { User } from '../../types/User';\nimport './CurrentUser.scss';\n\ntype Props = {\n  selectedUserId: number,\n  onClear: CallableFunction,\n};\n\nexport const CurrentUser: React.FC<Props> = ({\n  selectedUserId,\n  onClear,\n}) => {\n  const [currentUser, setCurrentUser] = useState<User>();\n\n  const loadUser = async () => {\n    try {\n      return setCurrentUser(\n        await getUser(selectedUserId),\n      );\n    } catch {\n      return setCurrentUser(\n        {\n          id: 0, name: '', phone: '', email: '',\n        },\n      );\n    }\n  };\n\n  useEffect(() => {\n    loadUser();\n  }, [selectedUserId]);\n\n  return (\n    <div className=\"CurrentUser\">\n      {currentUser?.id === 0 ? (\n        <>\n          <h2 className=\"CurrentUser__title\">\n            <span>\n              {'Selected user: '}\n              {selectedUserId}\n            </span>\n          </h2>\n\n          <h2 className=\"CurrentUser__title\">\n            <span className=\"CurrentUser__load-error\">\n              No user data\n            </span>\n          </h2>\n        </>\n      ) : (\n        <>\n          <h2 className=\"CurrentUser__title\">\n            <span>\n              {'Selected user: '}\n              {selectedUserId}\n            </span>\n          </h2>\n\n          <h3\n            className=\"CurrentUser__name\"\n            data-cy=\"userName\"\n          >\n            {currentUser?.name}\n          </h3>\n          <p\n            className=\"CurrentUser__email\"\n          >\n            {currentUser?.email}\n          </p>\n          <p\n            className=\"CurrentUser__phone\"\n          >\n            {currentUser?.phone}\n          </p>\n        </>\n      )}\n\n      <button\n        type=\"button\"\n        className=\"CurrentUser__clear button\"\n        onClick={() => onClear()}\n      >\n        Clear user\n      </button>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { getTodos } from './api/api';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\n\nconst App: React.FC = () => {\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [todos, setTodos] = useState([]);\n\n  const loadTodos = async () => {\n    setTodos(\n      await getTodos(),\n    );\n  };\n\n  useEffect(() => {\n    loadTodos();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__sidebar\">\n        <TodoList\n          todos={todos}\n          selectedUserId={selectedUserId}\n          onSelect={(userId: number) => {\n            setSelectedUserId(userId);\n          }}\n        />\n      </div>\n\n      <div className=\"App__content\">\n        <div className=\"App__content-container\">\n          {selectedUserId ? (\n            <CurrentUser\n              selectedUserId={selectedUserId}\n              onClear={() => {\n                setSelectedUserId(0);\n              }}\n            />\n          ) : 'No user selected'}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}